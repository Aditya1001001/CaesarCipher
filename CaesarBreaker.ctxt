#BlueJ class context
comment0.target=CaesarBreaker
comment0.text=\r\n\ Decrypts\ a\ message\ that\ was\ encrypted\ with\ one\ or\ two\ keys,\ \r\n\ using\ statistical\ letter\ frequencies\ of\ English\ text.\r\n\ \r\n\ @author\ Aditya\ Singh\r\n\ @version\ 16\ July\ 2019\r\n
comment1.params=s
comment1.target=int\ countLetters(java.lang.String)
comment1.text=\r\n\ Creates\ an\ array\ of\ letter\ frequencies\ in\ parameter\ String\ s\ \r\n\ and\ returns\ the\ index\ of\ the\ largest\ letter\ frequency.\r\n
comment2.params=values
comment2.target=int\ maxIndex(int[])
comment2.text=\r\n\ Calculates\ the\ index\ of\ the\ largest\ letter\ frequency\ from\ an\ array\ of\ all\ letter\ frequencies.\r\n\ @parameter\ freqs\ is\ an\ array\ containing\ letter\ frequencies,\ each\ index\ representing\ \r\n\ the\ corresponding\ index\ in\ the\ alphabet\ (e.g.\ 0\ represents\ the\ 0th\ letter,\ a)\r\n\ @returns\ the\ index\ as\ an\ int\r\n
comment3.params=s
comment3.target=int\ getKey(java.lang.String)
comment3.text=\r\n\ Returns\ the\ key\ to\ later\ decrypt\ parameter\ String\ s\ after\ calculating\ \r\n\ the\ shift\ between\ the\ most\ common\ letter\ in\ s,\ assumed\ to\ be\ E,\ and\ E.\r\n
comment4.params=message\ start
comment4.target=java.lang.String\ halfOfString(java.lang.String,\ int)
comment4.text=\r\n\ Returns\ a\ new\ String\ that\ is\ every\ other\ character\ from\ message\ \r\n\ starting\ with\ the\ start\ position.\r\n
comment5.params=
comment5.target=void\ testHalfOfString()
comment6.params=encrypted\ key
comment6.target=void\ decrypt(java.lang.String,\ int)
comment6.text=\r\n\ Creates\ a\ CaesarCipher\ object\ in\ order\ to\ encrypt\ encrypted\ string.\ \r\n\ @parameter\ encrypted\ is\ a\ String\ representing\ the\ encrypted\ message\ to\ encrypt\r\n
comment7.params=
comment7.target=void\ testDecrypt()
comment8.params=encrypted
comment8.target=java.lang.String\ decryptTwoKeys(java.lang.String)
comment8.text=\r\n\ Attempts\ to\ determine\ the\ two\ keys\ used\ to\ encrypt\ the\ message,\ prints\ the\ two\ keys,\ \r\n\ and\ then\ returns\ the\ decrypted\ String\ with\ those\ two\ keys.\r\n\ @parameter\ encrypted\ is\ a\ String\ representing\ the\ encrypted\ message\r\n
comment9.params=
comment9.target=void\ testDecryptTwoKeys()
numComments=10
